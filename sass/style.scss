/* Colours */
:root {
    --card-height: 7rem;
    --card-width: 7rem;
    --flip-height: var(--card-height);
    --flip-width: var(--card-width);
    --line-height: calc(var(--flip-height) * 0.5);
    --flip-container-color: var(--dark-desaturated-blue);
    --flip-color: var(--dark-desaturated-blue);
    --flip-text-color: var(--soft-red);
    --flip-border-radius: calc(var(--flip-height) * 0.05);
    --flip-display-bottom-point-width: 10px;
    --flip-display-bottom-point-height: 10px;
    --animation-time: 0.8s;
    --animation-ease: linear;
    --perspective: 20rem;
    
    // Variables desktop layout (xl >= 1200px)
    --card-height-xl: 14.7rem;
    --card-width-xl: 14.7rem;
    --flip-height-xl: var(--card-height-xl);
    --flip-width-xl: var(--card-width-xl);
    --line-height-xl: calc(var(--flip-height-xl) * 0.5);
    --flip-border-radius-xl: calc(var(--flip-height-xl) * 0.05);
    --flip-display-bottom-point-width-xl: 12px;
    --flip-display-bottom-point-height-xl: 12px;
    // TODO box-shadow
    // TODO perspective

    // Colours from Frontend Mentor challenge
    // Primary
    --grayish-blue: hsl(237, 18%, 59%);
    --soft-red: hsl(345, 95%, 68%);

    // Neutral
    --white: hsl(0, 0%, 100%);
    --dark-desaturated-blue: hsl(236, 21%, 26%);
    --very-dark-blue: hsl(235, 16%, 14%);
    --very-dark-mostly-black-blue: hsl(234, 17%, 12%);
}

/* Typography */

/* Fonts */
$font-primary: 'Red Hat Text', sans-serif;

/* Media Query break points */
$bp-desktop: 1200px; // minimum pixels desktop view

/* Global reset */
* {
    margin: 0;
    padding: 0;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

html {
    font-size: 62.5%; // 1rem = 10px (10px/16px = 62.5%)
    box-sizing: border-box;
}

body {
    font-family: 'Inter', sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100vw;
    height: 100vh;

    font: {
        family: $font-primary;
        size: 1.4rem;
        weight: 700;
    }

    background: {
        color: var(--very-dark-mostly-black-blue);
        image: url('../images/pattern-hills.svg'), url('../images/bg-stars.svg');
        repeat: no-repeat;
        position: 82% 100%, center center;
        size: 1200px, cover;
    }

    @media only screen and (min-width: $bp-desktop) {
        background: {
        position: bottom center, top center;
        size: contain, contain;
        }
    }
}

.container {
    padding: 14rem 2.5rem 5rem;
    display: flex;
    flex-direction: column;
    height: 100vh;

    .header {
        color: var(--white);
        font-size: 1.8rem;

        text: {
            align: center;
            transform: uppercase;
        }

        letter-spacing: 0.5rem;
        margin-bottom: 6rem;

        @media only screen and (min-width: $bp-desktop) {
            font-size: 2.2rem;
            letter-spacing: 0.75rem;
            margin-bottom: 10rem;
        }

    }

    .flip-clock {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        justify-content: space-between;
        gap: 1.5rem;

        @media only screen and (min-width: $bp-desktop) {
                gap: 3.4rem;
            }

        .days-card,
        .hours-card,
        .minutes-card,
        .seconds-card {
            position: relative;
            width: var(--card-width);
            height: var(--card-height);
            display: inline-flex;
            box-shadow: 2px 7px 0 hsl(240, 15%, 12%);

            @media only screen and (min-width: $bp-desktop) {
                width: var(--card-width-xl);
                height: var(--card-height-xl);
                //TODO box-shadow cards
            }
        }

        // Card points
        .days-card::before,
        .hours-card::before,
        .minutes-card::before,
        .seconds-card::before,
        
        .days-card::after,
        .hours-card::after,
        .minutes-card::after,
        .seconds-card::after
        {
            content: "";
            width: var(--flip-display-bottom-point-width);
            height: var(--flip-display-bottom-point-height);
            top: calc((var(--card-height) * 0.5) - (var(--flip-display-bottom-point-height) * 0.5));
            position: absolute;
            border-radius: 50%;
            background: #191a24;
            z-index: 1000;

            @media only screen and (min-width:$bp-desktop) {
                width: var(--flip-display-bottom-point-width-xl);
                height: var(--flip-display-bottom-point-height-xl);
                top: calc((var(--card-height-xl) * 0.5) - (var(--flip-display-bottom-point-height-xl) * 0.5));
            }
        }

        .days-card::before,
        .hours-card::before,
        .minutes-card::before,
        .seconds-card::before {
            left: calc(var(--flip-display-bottom-point-width) * -0.5);

            @media only screen and (min-width: $bp-desktop) {
                left: calc(var(--flip-display-bottom-point-width-xl) * -0.5);
            }
        }

        .days-card::after,
        .hours-card::after,
        .minutes-card::after,
        .seconds-card::after {

            right: calc(var(--flip-display-bottom-point-width) * -0.5);

            @media only screen and (min-width: $bp-desktop) {
                right: calc(var(--flip-display-bottom-point-width-xl) * -0.5);
            }
        }

        .desc {
            justify-self: center;
            color: var(--grayish-blue);

            font: {
                size: .7rem;
                weight: 400;
            }

            text-transform: uppercase;
            letter-spacing: .3rem;

            @media only screen and (min-width: $bp-desktop) {
                font-size: 1.4rem;
                letter-spacing: .6rem;
            }
        }


        .flip {
            height: var(--flip-height);
            width: var(--flip-width);
            border-radius: var(--flip-border-radius);

            font: {
                size: calc(var(--flip-height) * 0.5); // Half size of the flip height
                weight: 700;
            }

            position: relative;

            @media screen and (min-width: $bp-desktop) {
                height: var(--flip-height-xl);
                width: var(--flip-width-xl);
                border-radius: var(--flip-border-radius-xl);
                font-size: calc(var(--flip-height-xl) * 0.5);
            }


            &-display {
                height: var(--flip-height);
                width: var(--flip-width);
                display: flex;
                flex-direction: column;
                z-index: 1;

                @media screen and (min-width: $bp-desktop) {
                    height: var(--flip-height-xl);
                    width: var(--flip-width-xl);
                }


                &-top,
                &-bottom {
                    position: relative;
                    text-align: center;
                    overflow: hidden;
                    width: 100%;
                    height: calc(var(--flip-height) * 0.5); // Half size of the flip height
                    background-color: var(--flip-container-color);
                    color: var(--flip-text-color);
                    line-height: calc(var(--line-height) * var(--i)); // Property i will be defined later
                    
                    @media screen and (min-width: $bp-desktop) {
                        height: calc(var(--flip-height-xl) * 0.5);
                        line-height: calc(var(--line-height-xl) * var(--i));
                    }
                }

                &-top {
                    // Based on the i property we'll align the line-height
                    --i: 2;
                    border-top-left-radius: var(--flip-border-radius);
                    border-top-right-radius: var(--flip-border-radius);

                    @media only screen and (min-width: $bp-desktop) {
                        border-top-left-radius: var(--flip-border-radius-xl);
                        border-top-right-radius: var(--flip-border-radius-xl);
                    }
                    
                    //border-bottom: 1px solid #191a24;
                    background-color: hsl(237, 18%, 20%);

                }

                &-bottom {
                    --i: 0;
                    border-bottom-left-radius: var(--flip-border-radius);
                    border-bottom-right-radius: var(--flip-border-radius);

                    @media only screen and (min-width: $bp-desktop) {
                        border-bottom-left-radius: var(--flip-border-radius-xl);
                        border-bottom-right-radius: var(--flip-border-radius-xl);
                    }
                }

            }

            & .flipper {
                // This is positioned on top of the flip display so that they are stacked upon each other
                position: absolute;
                top: 0;
                bottom: 0;
                //background-color: rgba(255, 0, 0, 0.75);
                left: 0;
                right: 0;
                margin: auto;
                height: var(--flip-height);
                width: var(--flip-width);
                perspective: var(--perspective);

                @media only screen and (min-width: $bp-desktop) {
                    height: var(--flip-height-xl);
                    width: var(--flip-width-xl);
                    //TODO perspective
                }

                &-top,
                &-bottom {
                    position: absolute;
                    left: -10%; // negative percentage for better alignment
                    right: -10%;
                    height: calc(var(--flip-height) * 0.5);
                    width: var(--flip-width);
                    margin: auto;
                    text-align: center;
                    line-height: calc(var(--line-height) * var(--i));
                    overflow: hidden;
                    background-color: var(--flip-color);
                    color: var(--flip-text-color);

                    @media only screen and (min-width: $bp-desktop) {
                        height: calc(var(--flip-height-xl) * 0.5);
                        width: var(--flip-width-xl);
                        line-height: calc(var(--line-height-xl) * var(--i));
                    }

                }

                // Now we need to align the flipper line height to match with the file display line heights
                &-top {
                    --i: 2;
                    //background-color: pink;
                    top: 0;
                    transform-origin: bottom;
                    transform: rotateX(-90deg);
                    // We'll animate the top part from 0deg to -90deg
                    border-top-left-radius: var(--flip-border-radius);
                    border-top-right-radius: var(--flip-border-radius);

                    background-color: hsl(237, 18%, 20%);
                        box-shadow: 0 -5px 2px var(--very-dark-mostly-black-blue);

                    @media only screen and (min-width: $bp-desktop) {
                        border-top-left-radius: var(--flip-border-radius-xl);
                        border-top-right-radius: var(--flip-border-radius-xl);
                        //TODO box-shadow flipper-top
                    }

                    
                }

                &-bottom {
                    --i: 0;
                    //background-color: yellow;
                    // Flipper bottom part is visible so we need to rotate it to 90deg via X
                    transform: rotateX(90deg);
                    // Now transform the origin to top
                    transform-origin: top;
                    bottom: 0;
                    // During animation we'll need to rotate from 90deg to 0deg
                    border-bottom-left-radius: var(--flip-border-radius);
                    border-bottom-right-radius: var(--flip-border-radius);

                    @media only screen and (min-width: $bp-desktop) {
                        border-bottom-left-radius: var(--flip-border-radius-xl);
                        border-bottom-right-radius: var(--flip-border-radius-xl);
                    }
                }

            }

            // By adding a play class we'll animate the flipper
            &.play {

                & .flipper-top {
                    animation: flipperTopAnimation var(--animation-time) var(--animation-ease);
                }

                & .flipper-bottom {
                    animation: flipperBottomAnimation var(--animation-time) var(--animation-ease);
                }

            }
        }
    }

    .footer {
        display: flex;
        flex-grow: 1;
        justify-content: center;
        align-items: flex-end;
        gap: 3.5rem;

        svg {
            width: 24px;
            height: 24px;
            fill:hsl(237, 18%, 59%);
        }
        svg:hover {
            fill: var(--soft-red);
            cursor: pointer;
        }
    }

}



@keyframes flipperTopAnimation {
    0% {
        transform: rotateX(0deg);
    }

    50%,
    100% {
        transform: rotateX(-90deg);
    }
}

@keyframes flipperBottomAnimation {

    0%,
    50% {
        transform: rotateX(90deg);
    }

    100% {
        transform: rotateX(0deg);
    }
}