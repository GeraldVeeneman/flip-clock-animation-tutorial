/* Colours */
:root {
    // Primary
    --grayish-blue: hsl(237, 18%, 59%);
    --soft-red: hsl(345, 95%, 68%);

    // Neutral
    --white: hsl(0, 0%, 100%);
    --dark-desaturated-blue: hsl(236, 21%, 26%);
    --very-dark-blue: hsl(235, 16%, 14%);
    --very-dark-mostly-black-blue: hsl(234, 17%, 12%);
}

/* Typography */

/* Fonts */
$font-primary:'Red Hat Text', sans-serif;

/* Global reset */
* {
    margin: 0;
    padding: 0;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

html {
    font-size: 62.5%; // 1rem = 10px (10px/16px = 62.5%)
    box-sizing: border-box;
}

/* Lets define some CSS vars */
:root {
    --flip-height: 7rem;
    --flip-width: 3.5rem;
    --line-height: calc(var(--flip-height) * 0.5);
    --flip-container-color: var(--dark-desaturated-blue);
    --flip-color: var(--dark-desaturated-blue);
    --flip-text-color: var(--soft-red);
    --flip-border-radius: calc(var(--flip-height) * 0.05);
    --animation-time: 0.8s;
    --animation-ease: linear;
    --perspective: 20rem;
}

body {
    font-family: 'Inter', sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100vw;
    height: 100vh;

    font: {
        family: $font-primary;
        size: 1.4rem;
        weight: 700;
    }

    background: {
        color: var(--very-dark-mostly-black-blue);
        image: url('../images/pattern-hills.svg'), url('../images/bg-stars.svg');
        repeat: no-repeat;
        position: 82% 100%, center center;
        size: 1200px, cover;

        //TODO media query background
    };
}

.container {
    padding: 14rem 2.5rem 5rem;
    display: flex;
    flex-direction: column;
    height: 100vh;
    
    .header {
    color: var(--white);

    font: {
        size: 1.8rem;
    }

    text: {
        align: center;
        transform: uppercase;
    }

    letter-spacing: 0.5rem;
    margin-bottom: 6rem;

}

.flip-clock {
    display: grid;
    grid-template-columns: repeat(4,1fr);
    justify-content: space-between;
    gap: 1.5rem;

    .days,
    .hours,
    .minutes,
    .seconds {
        display: inline-flex;
    }

    .desc {
        justify-self: center;
        color: var(--grayish-blue);
        font: {
            size: .7rem;
            weight: 400;
        }
        text-transform: uppercase;
        letter-spacing: .3rem;
    }


    .flip {
        height: var(--flip-height);
        width: var(--flip-width);
        border-radius: var(--flip-border-radius);
        
        font: {
            size: calc(var(--flip-height) * 0.5); // Half size of the flip height
            weight: 700;
        }

        position: relative;


        &-display {
            height: var(--flip-height);
            width: var(--flip-width);
            display: flex;
            flex-direction: column;
            z-index: 1;


            &-top,
            &-bottom {
                position: relative;
                text-align: center;
                overflow: hidden;
                width: 100%;
                height: calc(var(--flip-height) * 0.5); // Half size of the flip height
                background-color: var(--flip-container-color);
                color: var(--flip-text-color);
                line-height: calc(var(--line-height) * var(--i)); // Property i will be defined later



            }

            &-top {
                // Based on the i property we'll align the line-height
                --i: 2;
                border-top-left-radius: var(--flip-border-radius);
                border-top-right-radius: var(--flip-border-radius);

            }

            &-bottom {
                --i: 0;
                border-bottom-left-radius: var(--flip-border-radius);
                border-bottom-right-radius: var(--flip-border-radius);
            }
        }

        & .flipper {
            // This is positioned on top of the flip display so that they are stacked upon each other
            position: absolute;
            top: 0;
            bottom: 0;
            //background-color: rgba(255, 0, 0, 0.75);
            left: 0;
            right: 0;
            margin: auto;
            height: var(--flip-height);
            width: var(--flip-width);
            perspective: var(--perspective);

            &-top,
            &-bottom {
                position: absolute;
                left: -10%; // negative percentage for better alignment
                right: -10%;
                height: calc(var(--flip-height) *.5);
                width: var(--flip-width);
                margin: auto;
                text-align: center;
                line-height: calc(var(--line-height) * var(--i));
                overflow: hidden;
                background-color: var(--flip-color);
                color: var(--flip-text-color);

            }

            // Now we need to align the flipper line height to match with the file display line heights
            &-top {
                --i: 2;
                //background-color: pink;
                top: 0;
                transform-origin: bottom;
                transform: rotateX(-90deg);
                // We'll animate the top part from 0deg to -90deg
                border-top-left-radius: var(--flip-border-radius);
                border-top-right-radius: var(--flip-border-radius);
            }

            &-bottom {
                --i: 0;
                //background-color: yellow;
                // Flipper bottom part is visible so we need to rotate it to 90deg via X
                transform: rotateX(90deg);
                // Now transform the origin to top
                transform-origin: top;
                bottom: 0;
                // During animation we'll need to rotate from 90deg to 0deg
                border-bottom-left-radius: var(--flip-border-radius);
                border-bottom-right-radius: var(--flip-border-radius);
            }

        }

        // By adding a play class we'll animate the flipper
        &.play {

            & .flipper-top {
                animation: flipperTopAnimation var(--animation-time) var(--animation-ease);
            }

            & .flipper-bottom {
                animation: flipperBottomAnimation var(--animation-time) var(--animation-ease);
            }

        }
    }
}
    .footer {
        display: flex;
        flex-grow: 1;
        justify-content: center;
        align-items: flex-end;
        gap: 3.5rem;
    }

}



@keyframes flipperTopAnimation {
    0% {
        transform: rotateX(0deg);
    }
    50%, 100% {
        transform: rotateX(-90deg);
    }
}

@keyframes flipperBottomAnimation {
    0%, 50% {
        transform: rotateX(90deg);
    }
    100% {
        transform: rotateX(0deg);
    }
}